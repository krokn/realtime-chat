services:
  postgres:
    container_name: postgres
    image: postgres:16
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
    ports:
      - "1221:5432"
    networks:
      - my_network
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  fastapi:
    container_name: fastapi
    build:
      context: .
      dockerfile: Dockerfile
    command: gunicorn main:app --workers 4 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
    networks:
      - my_network
    restart: always

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    networks:
      - my_network
    restart: always

  telegram_bot:
    container_name: telegram_bot
    build:
      context: .
      dockerfile: Dockerfile
    command: python src/services/telegram_bot.py
    networks:
      - my_network
    restart: always

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A src.services.celery worker --loglevel=info
    depends_on:
      - redis
      - postgres
    networks:
      - my_network
    restart: always

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - fastapi
    networks:
      - my_network
    restart: always


networks:
  my_network:
    driver: bridge

volumes:
  postgres-data:
